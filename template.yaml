AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  moontasirpicresizer

Globals:
  Function:
    Timeout: 30
    MemorySize: 512

Parameters:
  ImageBucket:
    Type: String
    Default:  "moontasir-input-picture-bucket"

  # ImageBucket:
  #   Type: String
  #   Default:  "moontasir-output-picture-bucket"

Resources:

  PictureInputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ImageBucket
      NotificationConfiguration:
        QueueConfigurations:
          - Event: 's3:ObjectCreated:*'
            Queue: !GetAtt StandardQueue.Arn
    DependsOn:
      - QueuePolicy

  QueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              Service: "s3.amazonaws.com"
            Action:
              - 'SQS:SendMessage'
            Resource: !GetAtt StandardQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Join ["",['arn:aws:s3:::',!Ref ImageBucket]]
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues:
        - !Ref StandardQueue

  StandardQueue:
    Type: AWS::SQS::Queue

  ImageModelsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ImageModels
      AttributeDefinitions:
        - AttributeName: ImageId
          AttributeType: S
        # - AttributeName: Height
        #   AttributeType: N
        # - AttributeName: Width
        #   AttributeType: N
      KeySchema:
        - AttributeName: ImageId
          KeyType: HASH
        # - AttributeName: Height
        #   KeyType: RANGE
        # - AttributeName: Width
        #   KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # PictureOutputBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Ref ImageBucket

  ImageSizeGetterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pic_resizer/
      Handler: imageSizeGetter.lambda_handler
      Runtime: python3.11
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref ImageModelsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ImageModelsTable

  ImageResizeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pic_resizer/
      Handler: imageResize.lambda_handler
      Runtime: python3.11
      Environment:
        Variables:
          S3_OUTPUT_BUCKET_NAME: !Ref ImageBucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref ImageBucket
        - S3WritePolicy:
            BucketName: !Ref ImageBucket

  moontasirStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: moontasirStateMachineRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StateMachinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt ImageSizeGetterFunction.Arn
                  - !GetAtt ImageResizeFunction.Arn

  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: GetImageSize
        States:
          GetImageSize:
            Type: Task
            Resource: !GetAtt ImageSizeGetterFunction.Arn
            Next: CheckIfImage

          CheckIfImage:
            Type: Choice
            Choices:
              - Variable: "$.isImage"
                BooleanEquals: true
                Next: ParallelResizeImage
              - Variable: "$.isImage"
                BooleanEquals: false
                Next: NotImageFinish

          NotImageFinish:
            Type: Pass
            End: True

          ParallelResizeImage:
            Type: Map
            InputPath: $
            ItemsPath: $.ImageSize
            MaxConcurrency: 0
            Iterator:
              StartAt: ResizeImage
              States:
                ResizeImage:
                  Type: Task
                  Resource: !GetAtt ImageResizeFunction.Arn
                  Next: Finish
                Finish:
                  Type: Pass
                  End: True
            ResultPath: $
            End: true
      Role: !GetAtt moontasirStateMachineRole.Arn

      # Logging:
      #   Level: ALL
      #   IncludeExecutionData: true
      #   Destinations:
      #     - CloudWatchLogsLogGroup:
      #         LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      # Policies:
      #   - AWSXrayWriteOnlyAccess
      #   - Statement:
      #       - Effect: Allow
      #         Action:
      #           - logs:CreateLogDelivery
      #           - logs:GetLogDelivery
      #           - logs:UpdateLogDelivery
      #           - logs:DeleteLogDelivery
      #           - logs:ListLogDeliveries
      #           - logs:PutResourcePolicy
      #           - logs:DescribeResourcePolicies
      #           - logs:DescribeLogGroups
      #         Resource: '*'
      # Tracing:
      #   Enabled: true
      # Type: STANDARD
      # DefinitionSubstitutions:
      #   LambdaFunction1: !Ref AWS::NoValue

  PipeSQSToStepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - pipes.amazonaws.com
            Action: 
              - sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Sub ${AWS::AccountId}
                aws:SourceArn: !Sub arn:${AWS::Partition}:pipes:${AWS::Region}:${AWS::AccountId}:pipe/SQStoStepFunctionsStandard
      Policies:
        - PolicyName: AppPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                - states:StartExecution
                Resource: !Ref StateMachine
              -
                Effect: Allow
                Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                Resource: !GetAtt StandardQueue.Arn

  PipeSQStoStepFunctionsStandard:
    Type: AWS::Pipes::Pipe
    Properties: 
      RoleArn: !GetAtt PipeSQSToStepFunctionsRole.Arn
      Source: !GetAtt StandardQueue.Arn
      Target: !Ref StateMachine
      TargetParameters:
        StepFunctionStateMachineParameters:
          InvocationType: FIRE_AND_FORGET
      Name: SQStoStepFunctionsStandard
